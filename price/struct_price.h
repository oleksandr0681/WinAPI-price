// price.h.
// Структура price, розраховує ціну продукції.

# include <windows.h>
// Ця інструкція підключає до програми головний заголовочний файл
// Windows-програм.

struct price
// Оголошення структури price.
{
public:
// Відкриті члени структури.
	price
	// Конструктор.
	(
		float initial_prime_cost,
		// Ініціалізація собівартості продукції, грн.
		float initial_profit,
		// Ініціалізація прибутку, грн.
		float initial_TAC,
		// Ініціалізація податку на додану вартість (ПДВ), грн.
		float initial_tax,
		// Ініціалізація інших податків та взносів у соцфонди, грн.
		float initial_excise,
		// Ініціалізація акцизного збору, грн.
		float initial_sale_increase,
		// Ініціалізація гуртово-збутової надбавки, грн.
		float initial_trade_increase
		// Ініціалізація торгівельної надбавки, грн.
	);
	~price();
	// Деструктор.
	void set_prime_cost(float prime_cost);
	// Функція доступу. Приймає в якості аргументу
	// собівартість продукції, грн.
	float get_prime_cost() const;
	// Фукція доступу. Вертае значення собівартості
	// продукції, грн.
	void set_profit(float profit);
	// Функція доступу. Приймає в якості аргументу
	// прибуток, грн.
	float get_profit() const;
	// Функція доступу. Вертае значення прибутку, грн.
	void set_TAC(float TAC);
	// Функція доступу. Приймає в якості аргументу
	// податок на додану вартість (ПДВ), грн.
	float get_TAC() const;
	// Фукція доступу. Вертає значення податку на
	// додану вартість (ПДВ), грн.
	void set_tax(float tax);
	// Функція доступу. Приймає в якості аргументу
	// інші податки та взноси у соцфонди, грн.
	float get_tax() const;
	// Функція доступу. Вертає значення інших податків
	// та взносів у соцфонди, грн.
	void set_excise(float excise);
	// Функія доступу. Приймає в якості аргументу
	// акцизний збір, грн.
	float get_excise() const;
	// Функція доступу. Вертає значення акцизного збору, грн.
	void set_sale_increase(float sale_increase);
	// Функція доступу. Приймає в якості аргументу
	// оптово-збутові надбавки, грн.
	float get_sale_increase() const;
	// Функція доступу. Вертає значення
	// гуртово-збутові надбавки, грн.
	void set_trade_increase(float trade_increase);
	// Функція доступу. Приймае в якості аргументу
	// торгівельну надбавку, грн.
	float get_trade_increase() const;
	// Функція доступу. Вертає значення торгівельної
	// надбавки, грн.
	float calculation();
	// Функція-член. Розраховуе ціну продукції, грн.
	// Функція-член вертає значення ціни продукції, грн.
	float get_price() const;
	// Функція доступу. Вертає значення ціни продукції, грн.
private:
// Закриті члени структури.
	float object_prime_cost;
	// Змінна величина-член. Собівартість продукції, грн.
	float object_profit;
	// Змінна величина-член. Прибуток, грн.
	float object_TAC;
	// Змінна величина-член. Податок на додану вартість (ПДВ), грн.
	float object_tax;
	// Змінна величина-член. Інші податки та взноси у соцфонди, грн.
	float object_excise;
	// Змінна величина-член. Акцизний збір, грн.
	float object_sale_increase;
	// Змінна величина-член. Гуртово-збутова надбавка, грн.
	float object_trade_increase;
	// Змінна величина-член. Торгівельна надбавка, грн.
	float object_price;
	// Змінна величина-член. Ціна продукції, грн.
};

/*
							 Список джерел інформації

1	Джесс Либерти, Брэдли Джонс. Освой самостоятельно С++ за 21 день, 5-е
	издание.: Пер. с англ. - М.: Издательский дом "Вильямс", 2008. - 768 с.:
	ил.- Парал. тит. англ.
2	Щупак Ю. А. Win32 API. Разработка приложений для Windows. – СПб.: Питер,
	2008. – 592 с.: ил.
3	Бобровский С.И. Технологии C++ Builder. Разработка приложений для бизнеса.
	Учебный курс. — СПб.: Питер, 2007.
4	Турбо С. Руководство пользователя. Версия 2.0. Москва, 1989.
5	Культин Н.Б. Основы программирования в Turbo C++. - СПб.:
	"БХВ - Петербург", 2007., 464 с.: ил. + CD-ROM.      http://tid.com.ua
6	Економіка підприємства: Підручник / За заг. ред. д-ра екон. наук, проф.
	С.Ф. Покропивного. - К.: КНЕУ, 2003. - 608с. - Рос. мовою.
7	Коноваленко В. Авторське право: автору, редактору, видавцю. - Х.:
	Фактор, 2007. - 496с.
8	http://radiofront.narod.ru/htm/prog/htm/indexprog.html
9	http://w32api.narod.ru


	Для нематериальных активов, период использования которых невозможно
установит, норма амортизации определяется в расчёте на 10 лет, т.е. 10%
в год.
	Оценить стоимость нематериальных активов можно по методу освобождения
от роялти. Стоимость уникальных нематериальных активов можно расчитать
методом восстановительной стоимости.
*/

